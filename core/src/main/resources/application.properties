server.port=8090
spring.security.user.name=root
spring.security.user.password=root
spring.datasource.name=miaosha
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springboot_demo?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
mybatis.type-aliases-package=com.wxc.entity
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#使用druid数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092

# 指定 kafka 地址，我这里部署在的本地，直接就 localhost, 若外网地址，注意修改【PS: 集群部署需用逗号分隔】
spring.kafka.bootstrap-servers= localhost:9092

# 指定 group_id
spring.kafka.consumer.group-id= group_id
spring.kafka.consumer.auto-offset-reset= earliest
# 指定消息key和消息体的序列化方式
spring.kafka.consumerkey-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumervalue-deserializer= org.apache.kafka.common.serialization.StringDeserializer

# 指定消息key和消息体的序列化方式
spring.kafka.producer.key-deserializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-deserializer= org.apache.kafka.common.serialization.StringSerializer
